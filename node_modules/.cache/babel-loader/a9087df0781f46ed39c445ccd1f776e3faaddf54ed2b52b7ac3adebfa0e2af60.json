{"ast":null,"code":"var _jsxFileName = \"/Users/isaacson/Projects/invester/src/components/Layout/Sidebar.tsx\",\n  _s = $RefreshSig$();\nimport { Home, Plus, Box, Trash2 } from \"react-feather\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setActiveDashboard, setDashboards } from \"../../store/global\";\nimport { useEffect, useState } from \"react\";\nimport { useDashboard } from \"../../hooks/useDashboard\";\nimport { useBoard } from \"../../hooks/useBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar() {\n  _s();\n  const dispatch = useDispatch();\n  const [activeOne, setActiveOne] = useState(\"home\");\n  const {\n    activeDashboard,\n    dashboards\n  } = useSelector(state => state);\n  const {\n    createNewDashboard,\n    getLocalDashboards,\n    getLocalActiveDashboard,\n    saveDashboards\n  } = useDashboard();\n  const {\n    createLayout\n  } = useBoard();\n  useEffect(() => {\n    (async () => {\n      const localDashboards = await getLocalDashboards();\n      dispatch(setDashboards(localDashboards));\n      const activeDashboard = await getLocalActiveDashboard();\n      dispatch(setActiveDashboard(activeDashboard));\n    })();\n  }, []);\n  useEffect(() => {\n    setActiveOne(activeDashboard);\n    dispatch(setActiveDashboard(activeDashboard));\n    createLayout();\n  }, [activeDashboard]);\n  function handleDeleteDashboard(dashboardId) {\n    if (window.confirm(\"Are you certain that you wish to delete this dashboard? Please be aware that all of the data associated with it will be permanently lost. Would you like to proceed with this action?\")) {\n      const filteredDashboards = dashboards.filter(dashB => dashB.id != dashboardId);\n      const save = saveDashboards(filteredDashboards);\n      if (save) {\n        dispatch(setDashboards(filteredDashboards));\n        dispatch(setActiveDashboard(\"home\"));\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dashboard-btn ${activeOne === \"home\" && \"active\"}`,\n      onClick: () => {\n        dispatch(setActiveDashboard(\"home\"));\n      },\n      children: /*#__PURE__*/_jsxDEV(Home, {\n        size: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), dashboards.map((dashB, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dashboard-btn ${activeOne === dashB.id && \"active\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-btn-tooltip\",\n        onClick: () => {\n          handleDeleteDashboard(dashB.id);\n        },\n        children: /*#__PURE__*/_jsxDEV(Trash2, {\n          size: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-btn-button\",\n        onClick: e => {\n          dispatch(setActiveDashboard(dashB.id));\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          size: 12\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-btn add-button\",\n      onClick: createNewDashboard,\n      children: /*#__PURE__*/_jsxDEV(Plus, {\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n_s(Sidebar, \"Wru2oUSxvctlw4dzBDzGT5qSFBY=\", false, function () {\n  return [useDispatch, useSelector, useDashboard, useBoard];\n});\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["Home","Plus","Box","Trash2","useDispatch","useSelector","setActiveDashboard","setDashboards","useEffect","useState","useDashboard","useBoard","jsxDEV","_jsxDEV","Sidebar","_s","dispatch","activeOne","setActiveOne","activeDashboard","dashboards","state","createNewDashboard","getLocalDashboards","getLocalActiveDashboard","saveDashboards","createLayout","localDashboards","handleDeleteDashboard","dashboardId","window","confirm","filteredDashboards","filter","dashB","id","save","children","className","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","map","index","e","_c","$RefreshReg$"],"sources":["/Users/isaacson/Projects/invester/src/components/Layout/Sidebar.tsx"],"sourcesContent":["import { Home, Plus, Box, Trash2 } from \"react-feather\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    GlobalData,\n    setActiveDashboard,\n    setDashboards,\n} from \"../../store/global\";\nimport { useEffect, useState } from \"react\";\nimport { useDashboard } from \"../../hooks/useDashboard\";\nimport { useBoard } from \"../../hooks/useBoard\";\n\nexport default function Sidebar() {\n    const dispatch = useDispatch();\n    const [activeOne, setActiveOne] = useState<string>(\"home\");\n    const { activeDashboard, dashboards } = useSelector(\n        (state: GlobalData) => state\n    );\n    const {\n        createNewDashboard,\n        getLocalDashboards,\n        getLocalActiveDashboard,\n        saveDashboards,\n    } = useDashboard();\n    const { createLayout } = useBoard();\n\n    useEffect(() => {\n        (async () => {\n            const localDashboards = await getLocalDashboards();\n            dispatch(setDashboards(localDashboards));\n            const activeDashboard = await getLocalActiveDashboard();\n            dispatch(setActiveDashboard(activeDashboard));\n        })();\n    }, []);\n\n    useEffect(() => {\n        setActiveOne(activeDashboard);\n        dispatch(setActiveDashboard(activeDashboard));\n        createLayout();\n    }, [activeDashboard]);\n\n    function handleDeleteDashboard(dashboardId: string) {\n        if (\n            window.confirm(\n                \"Are you certain that you wish to delete this dashboard? Please be aware that all of the data associated with it will be permanently lost. Would you like to proceed with this action?\"\n            )\n        ) {\n            const filteredDashboards = dashboards.filter(\n                (dashB) => dashB.id != dashboardId\n            );\n\n            const save = saveDashboards(filteredDashboards);\n\n            if (save) {\n                dispatch(setDashboards(filteredDashboards));\n                dispatch(setActiveDashboard(\"home\"));\n            }\n        }\n    }\n\n    return (\n        <div id=\"Sidebar\">\n            <div\n                className={`dashboard-btn ${activeOne === \"home\" && \"active\"}`}\n                onClick={() => {\n                    dispatch(setActiveDashboard(\"home\"));\n                }}\n            >\n                <Home size={12} />\n            </div>\n            {dashboards.map((dashB, index) => (\n                <div\n                    key={index}\n                    className={`dashboard-btn ${\n                        activeOne === dashB.id && \"active\"\n                    }`}\n                >\n                    <div\n                        className=\"dashboard-btn-tooltip\"\n                        onClick={() => {\n                            handleDeleteDashboard(dashB.id);\n                        }}\n                    >\n                        <Trash2 size={12} />\n                    </div>\n                    <div\n                        className=\"dashboard-btn-button\"\n                        onClick={(e) => {\n                            dispatch(setActiveDashboard(dashB.id));\n                        }}\n                    >\n                        <Box size={12} />\n                    </div>\n                </div>\n            ))}\n            <div\n                className=\"dashboard-btn add-button\"\n                onClick={createNewDashboard}\n            >\n                <Plus size={16} />\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}