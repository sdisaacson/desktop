{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/isaacson/Projects/invester/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _fastEquals = require(\"fast-equals\");\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nvar _utils = require(\"./utils\");\nvar _calculateUtils = require(\"./calculateUtils\");\nvar _GridItem = _interopRequireDefault(require(\"./GridItem\"));\nvar _ReactGridLayoutPropTypes = _interopRequireDefault(require(\"./ReactGridLayoutPropTypes\"));\nfunction _interopRequireDefault(e) {\n  return e && e.__esModule ? e : {\n    default: e\n  };\n}\nfunction _interopRequireWildcard(e, t) {\n  if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n    n = new WeakMap();\n  return (_interopRequireWildcard = function (e, t) {\n    if (!t && e && e.__esModule) return e;\n    var o,\n      i,\n      f = {\n        __proto__: null,\n        default: e\n      };\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f;\n    if (o = t ? n : r) {\n      if (o.has(e)) return o.get(e);\n      o.set(e, f);\n    }\n    for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]);\n    return f;\n  })(e, t);\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n/*:: import type {\n  ChildrenArray as ReactChildrenArray,\n  Element as ReactElement\n} from \"react\";*/\n/*:: import type {\n  CompactType,\n  GridResizeEvent,\n  GridDragEvent,\n  DragOverEvent,\n  Layout,\n  DroppingPosition,\n  LayoutItem\n} from \"./utils\";*/\n// Types\n/*:: import type { PositionParams } from \"./calculateUtils\";*/\n/*:: type State = {\n  activeDrag: ?LayoutItem,\n  layout: Layout,\n  mounted: boolean,\n  oldDragItem: ?LayoutItem,\n  oldLayout: ?Layout,\n  oldResizeItem: ?LayoutItem,\n  resizing: boolean,\n  droppingDOMNode: ?ReactElement<any>,\n  droppingPosition?: DroppingPosition,\n  // Mirrored props\n  children: ReactChildrenArray<ReactElement<any>>,\n  compactType?: CompactType,\n  propsLayout?: Layout\n};*/\n/*:: import type { Props, DefaultProps } from \"./ReactGridLayoutPropTypes\";*/\n// End Types\nconst layoutClassName = \"react-grid-layout\";\nlet isFirefox = false;\n// Try...catch will protect from navigator not existing (e.g. node) or a bad implementation of navigator\ntry {\n  isFirefox = /firefox/i.test(navigator.userAgent);\n} catch (e) {\n  /* Ignore */\n}\n\n/**\n * A reactive, fluid grid layout with draggable, resizable components.\n */\n\nclass ReactGridLayout extends React.Component /*:: <Props, State>*/ {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", {\n      activeDrag: null,\n      layout: (0, _utils.synchronizeLayoutWithChildren)(this.props.layout, this.props.children, this.props.cols,\n      // Legacy support for verticalCompact: false\n      (0, _utils.compactType)(this.props), this.props.allowOverlap),\n      mounted: false,\n      oldDragItem: null,\n      oldLayout: null,\n      oldResizeItem: null,\n      resizing: false,\n      droppingDOMNode: null,\n      children: []\n    });\n    _defineProperty(this, \"dragEnterCounter\", 0);\n    /**\n     * When dragging starts\n     * @param {String} i Id of the child\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDragStart\", (i /*: string*/, x /*: number*/, y /*: number*/, _ref /*:: */) => {\n      let {\n        e,\n        node\n      } /*: GridDragEvent*/ = _ref /*: GridDragEvent*/;\n      const {\n        layout\n      } = this.state;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Create placeholder (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        placeholder: true,\n        i: i\n      };\n      this.setState({\n        oldDragItem: (0, _utils.cloneLayoutItem)(l),\n        oldLayout: layout,\n        activeDrag: placeholder\n      });\n      return this.props.onDragStart(layout, l, l, null, e, node);\n    });\n    /**\n     * Each drag movement create a new dragelement and move the element to the dragged location\n     * @param {String} i Id of the child\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDrag\", (i, x, y, _ref2) => {\n      let {\n        e,\n        node\n      } = _ref2;\n      const {\n        oldDragItem\n      } = this.state;\n      let {\n        layout\n      } = this.state;\n      const {\n        cols,\n        allowOverlap,\n        preventCollision\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Create placeholder (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        placeholder: true,\n        i: i\n      };\n\n      // Move the element to the dragged location.\n      const isUserAction = true;\n      layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n      this.props.onDrag(layout, oldDragItem, l, placeholder, e, node);\n      this.setState({\n        layout: allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols),\n        activeDrag: placeholder\n      });\n    });\n    /**\n     * When dragging stops, figure out which position the element is closest to and update its x and y.\n     * @param  {String} i Index of the child.\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDragStop\", (i, x, y, _ref3) => {\n      let {\n        e,\n        node\n      } = _ref3;\n      if (!this.state.activeDrag) return;\n      const {\n        oldDragItem\n      } = this.state;\n      let {\n        layout\n      } = this.state;\n      const {\n        cols,\n        preventCollision,\n        allowOverlap\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Move the element here\n      const isUserAction = true;\n      layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n\n      // Set state\n      const newLayout = allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols);\n      this.props.onDragStop(newLayout, oldDragItem, l, null, e, node);\n      const {\n        oldLayout\n      } = this.state;\n      this.setState({\n        activeDrag: null,\n        layout: newLayout,\n        oldDragItem: null,\n        oldLayout: null\n      });\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    });\n    _defineProperty(this, \"onResizeStart\", (i, w, h, _ref4) => {\n      let {\n        e,\n        node\n      } = _ref4;\n      const {\n        layout\n      } = this.state;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n      this.setState({\n        oldResizeItem: (0, _utils.cloneLayoutItem)(l),\n        oldLayout: this.state.layout,\n        resizing: true\n      });\n      this.props.onResizeStart(layout, l, l, null, e, node);\n    });\n    _defineProperty(this, \"onResize\", (i, w, h, _ref5) => {\n      let {\n        e,\n        node,\n        size,\n        handle\n      } = _ref5;\n      const {\n        oldResizeItem\n      } = this.state;\n      const {\n        layout\n      } = this.state;\n      const {\n        cols,\n        preventCollision,\n        allowOverlap\n      } = this.props;\n      let shouldMoveItem = false;\n      let finalLayout;\n      let x;\n      let y;\n      const [newLayout, l] = (0, _utils.withLayoutItem)(layout, i, l => {\n        let hasCollisions;\n        x = l.x;\n        y = l.y;\n        if ([\"sw\", \"w\", \"nw\", \"n\", \"ne\"].indexOf(handle) !== -1) {\n          if ([\"sw\", \"nw\", \"w\"].indexOf(handle) !== -1) {\n            x = l.x + (l.w - w);\n            w = l.x !== x && x < 0 ? l.w : w;\n            x = x < 0 ? 0 : x;\n          }\n          if ([\"ne\", \"n\", \"nw\"].indexOf(handle) !== -1) {\n            y = l.y + (l.h - h);\n            h = l.y !== y && y < 0 ? l.h : h;\n            y = y < 0 ? 0 : y;\n          }\n          shouldMoveItem = true;\n        }\n\n        // Something like quad tree should be used\n        // to find collisions faster\n        if (preventCollision && !allowOverlap) {\n          const collisions = (0, _utils.getAllCollisions)(layout, _objectSpread(_objectSpread({}, l), {}, {\n            w,\n            h,\n            x,\n            y\n          })).filter(layoutItem => layoutItem.i !== l.i);\n          hasCollisions = collisions.length > 0;\n\n          // If we're colliding, we need adjust the placeholder.\n          if (hasCollisions) {\n            // Reset layoutItem dimensions if there were collisions\n            y = l.y;\n            h = l.h;\n            x = l.x;\n            w = l.w;\n            shouldMoveItem = false;\n          }\n        }\n        l.w = w;\n        l.h = h;\n        return l;\n      });\n\n      // Shouldn't ever happen, but typechecking makes it necessary\n      if (!l) return;\n      finalLayout = newLayout;\n      if (shouldMoveItem) {\n        // Move the element to the new position.\n        const isUserAction = true;\n        finalLayout = (0, _utils.moveElement)(newLayout, l, x, y, isUserAction, this.props.preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n      }\n\n      // Create placeholder element (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        static: true,\n        i: i\n      };\n      this.props.onResize(finalLayout, oldResizeItem, l, placeholder, e, node);\n\n      // Re-compact the newLayout and set the drag placeholder.\n      this.setState({\n        layout: allowOverlap ? finalLayout : (0, _utils.compact)(finalLayout, (0, _utils.compactType)(this.props), cols),\n        activeDrag: placeholder\n      });\n    });\n    _defineProperty(this, \"onResizeStop\", (i, w, h, _ref6) => {\n      let {\n        e,\n        node\n      } = _ref6;\n      const {\n        layout,\n        oldResizeItem\n      } = this.state;\n      const {\n        cols,\n        allowOverlap\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n\n      // Set state\n      const newLayout = allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols);\n      this.props.onResizeStop(newLayout, oldResizeItem, l, null, e, node);\n      const {\n        oldLayout\n      } = this.state;\n      this.setState({\n        activeDrag: null,\n        layout: newLayout,\n        oldResizeItem: null,\n        oldLayout: null,\n        resizing: false\n      });\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    });\n    // Called while dragging an element. Part of browser native drag/drop API.\n    // Native event target might be the layout itself, or an element within the layout.\n    _defineProperty(this, \"onDragOver\", e => {\n      var _e$nativeEvent$target;\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n\n      // we should ignore events from layout's children in Firefox\n      // to avoid unpredictable jumping of a dropping placeholder\n      // FIXME remove this hack\n      if (isFirefox &&\n      // $FlowIgnore can't figure this out\n      !((_e$nativeEvent$target = e.nativeEvent.target) !== null && _e$nativeEvent$target !== void 0 && _e$nativeEvent$target.classList.contains(layoutClassName))) {\n        return false;\n      }\n      const {\n        droppingItem,\n        onDropDragOver,\n        margin,\n        cols,\n        rowHeight,\n        maxRows,\n        width,\n        containerPadding,\n        transformScale\n      } = this.props;\n      // Allow user to customize the dropping item or short-circuit the drop based on the results\n      // of the `onDragOver(e: Event)` callback.\n      const onDragOverResult = onDropDragOver === null || onDropDragOver === void 0 ? void 0 : onDropDragOver(e);\n      if (onDragOverResult === false) {\n        if (this.state.droppingDOMNode) {\n          this.removeDroppingPlaceholder();\n        }\n        return false;\n      }\n      const finalDroppingItem = _objectSpread(_objectSpread({}, droppingItem), onDragOverResult);\n      const {\n        layout\n      } = this.state;\n\n      // $FlowIgnore missing def\n      const gridRect = e.currentTarget.getBoundingClientRect(); // The grid's position in the viewport\n\n      // Calculate the mouse position relative to the grid\n      const layerX = e.clientX - gridRect.left;\n      const layerY = e.clientY - gridRect.top;\n      const droppingPosition = {\n        left: layerX / transformScale,\n        top: layerY / transformScale,\n        e\n      };\n      if (!this.state.droppingDOMNode) {\n        const positionParams /*: PositionParams*/ = {\n          cols,\n          margin,\n          maxRows,\n          rowHeight,\n          containerWidth: width,\n          containerPadding: containerPadding || margin\n        };\n        const calculatedPosition = (0, _calculateUtils.calcXY)(positionParams, layerY, layerX, finalDroppingItem.w, finalDroppingItem.h);\n        this.setState({\n          droppingDOMNode: /*#__PURE__*/React.createElement(\"div\", {\n            key: finalDroppingItem.i\n          }),\n          droppingPosition,\n          layout: [...layout, _objectSpread(_objectSpread({}, finalDroppingItem), {}, {\n            x: calculatedPosition.x,\n            y: calculatedPosition.y,\n            static: false,\n            isDraggable: true\n          })]\n        });\n      } else if (this.state.droppingPosition) {\n        const {\n          left,\n          top\n        } = this.state.droppingPosition;\n        const shouldUpdatePosition = left != layerX || top != layerY;\n        if (shouldUpdatePosition) {\n          this.setState({\n            droppingPosition\n          });\n        }\n      }\n    });\n    _defineProperty(this, \"removeDroppingPlaceholder\", () => {\n      const {\n        droppingItem,\n        cols\n      } = this.props;\n      const {\n        layout\n      } = this.state;\n      const newLayout = (0, _utils.compact)(layout.filter(l => l.i !== droppingItem.i), (0, _utils.compactType)(this.props), cols, this.props.allowOverlap);\n      this.setState({\n        layout: newLayout,\n        droppingDOMNode: null,\n        activeDrag: null,\n        droppingPosition: undefined\n      });\n    });\n    _defineProperty(this, \"onDragLeave\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      this.dragEnterCounter--;\n\n      // onDragLeave can be triggered on each layout's child.\n      // But we know that count of dragEnter and dragLeave events\n      // will be balanced after leaving the layout's container\n      // so we can increase and decrease count of dragEnter and\n      // when it'll be equal to 0 we'll remove the placeholder\n      if (this.dragEnterCounter === 0) {\n        this.removeDroppingPlaceholder();\n      }\n    });\n    _defineProperty(this, \"onDragEnter\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      this.dragEnterCounter++;\n    });\n    _defineProperty(this, \"onDrop\", (e /*: Event*/) => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      const {\n        droppingItem\n      } = this.props;\n      const {\n        layout\n      } = this.state;\n      const item = layout.find(l => l.i === droppingItem.i);\n\n      // reset dragEnter counter on drop\n      this.dragEnterCounter = 0;\n      this.removeDroppingPlaceholder();\n      this.props.onDrop(layout, item, e);\n    });\n  }\n  componentDidMount() {\n    this.setState({\n      mounted: true\n    });\n    // Possibly call back with layout on mount. This should be done after correcting the layout width\n    // to ensure we don't rerender with the wrong width.\n    this.onLayoutMaybeChanged(this.state.layout, this.props.layout);\n  }\n  static getDerivedStateFromProps(nextProps /*: Props*/, prevState /*: State*/) /*: $Shape<State> | null*/{\n    let newLayoutBase;\n    if (prevState.activeDrag) {\n      return null;\n    }\n\n    // Legacy support for compactType\n    // Allow parent to set layout directly.\n    if (!(0, _fastEquals.deepEqual)(nextProps.layout, prevState.propsLayout) || nextProps.compactType !== prevState.compactType) {\n      newLayoutBase = nextProps.layout;\n    } else if (!(0, _utils.childrenEqual)(nextProps.children, prevState.children)) {\n      // If children change, also regenerate the layout. Use our state\n      // as the base in case because it may be more up to date than\n      // what is in props.\n      newLayoutBase = prevState.layout;\n    }\n\n    // We need to regenerate the layout.\n    if (newLayoutBase) {\n      const newLayout = (0, _utils.synchronizeLayoutWithChildren)(newLayoutBase, nextProps.children, nextProps.cols, (0, _utils.compactType)(nextProps), nextProps.allowOverlap);\n      return {\n        layout: newLayout,\n        // We need to save these props to state for using\n        // getDerivedStateFromProps instead of componentDidMount (in which we would get extra rerender)\n        compactType: nextProps.compactType,\n        children: nextProps.children,\n        propsLayout: nextProps.layout\n      };\n    }\n    return null;\n  }\n  shouldComponentUpdate(nextProps /*: Props*/, nextState /*: State*/) /*: boolean*/{\n    return (\n      // NOTE: this is almost always unequal. Therefore the only way to get better performance\n      // from SCU is if the user intentionally memoizes children. If they do, and they can\n      // handle changes properly, performance will increase.\n      this.props.children !== nextProps.children || !(0, _utils.fastRGLPropsEqual)(this.props, nextProps, _fastEquals.deepEqual) || this.state.activeDrag !== nextState.activeDrag || this.state.mounted !== nextState.mounted || this.state.droppingPosition !== nextState.droppingPosition\n    );\n  }\n  componentDidUpdate(prevProps /*: Props*/, prevState /*: State*/) {\n    if (!this.state.activeDrag) {\n      const newLayout = this.state.layout;\n      const oldLayout = prevState.layout;\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    }\n  }\n\n  /**\n   * Calculates a pixel value for the container.\n   * @return {String} Container height in pixels.\n   */\n  containerHeight() /*: ?string*/{\n    if (!this.props.autoSize) return;\n    const nbRow = (0, _utils.bottom)(this.state.layout);\n    const containerPaddingY = this.props.containerPadding ? this.props.containerPadding[1] : this.props.margin[1];\n    return nbRow * this.props.rowHeight + (nbRow - 1) * this.props.margin[1] + containerPaddingY * 2 + \"px\";\n  }\n  onLayoutMaybeChanged(newLayout /*: Layout*/, oldLayout /*: ?Layout*/) {\n    if (!oldLayout) oldLayout = this.state.layout;\n    if (!(0, _fastEquals.deepEqual)(oldLayout, newLayout)) {\n      this.props.onLayoutChange(newLayout);\n    }\n  }\n  /**\n   * Create a placeholder object.\n   * @return {Element} Placeholder div.\n   */\n  placeholder() /*: ?ReactElement<any>*/{\n    const {\n      activeDrag\n    } = this.state;\n    if (!activeDrag) return null;\n    const {\n      width,\n      cols,\n      margin,\n      containerPadding,\n      rowHeight,\n      maxRows,\n      useCSSTransforms,\n      transformScale\n    } = this.props;\n\n    // {...this.state.activeDrag} is pretty slow, actually\n    return /*#__PURE__*/React.createElement(_GridItem.default, {\n      w: activeDrag.w,\n      h: activeDrag.h,\n      x: activeDrag.x,\n      y: activeDrag.y,\n      i: activeDrag.i,\n      className: \"react-grid-placeholder \".concat(this.state.resizing ? \"placeholder-resizing\" : \"\"),\n      containerWidth: width,\n      cols: cols,\n      margin: margin,\n      containerPadding: containerPadding || margin,\n      maxRows: maxRows,\n      rowHeight: rowHeight,\n      isDraggable: false,\n      isResizable: false,\n      isBounded: false,\n      useCSSTransforms: useCSSTransforms,\n      transformScale: transformScale\n    }, /*#__PURE__*/React.createElement(\"div\", null));\n  }\n\n  /**\n   * Given a grid item, set its style attributes & surround in a <Draggable>.\n   * @param  {Element} child React element.\n   * @return {Element}       Element wrapped in draggable and properly placed.\n   */\n  processGridItem(child /*: ReactElement<any>*/, isDroppingItem /*: boolean*/) /*: ?ReactElement<any>*/{\n    if (!child || !child.key) return;\n    const l = (0, _utils.getLayoutItem)(this.state.layout, String(child.key));\n    if (!l) return null;\n    const {\n      width,\n      cols,\n      margin,\n      containerPadding,\n      rowHeight,\n      maxRows,\n      isDraggable,\n      isResizable,\n      isBounded,\n      useCSSTransforms,\n      transformScale,\n      draggableCancel,\n      draggableHandle,\n      resizeHandles,\n      resizeHandle\n    } = this.props;\n    const {\n      mounted,\n      droppingPosition\n    } = this.state;\n\n    // Determine user manipulations possible.\n    // If an item is static, it can't be manipulated by default.\n    // Any properties defined directly on the grid item will take precedence.\n    const draggable = typeof l.isDraggable === \"boolean\" ? l.isDraggable : !l.static && isDraggable;\n    const resizable = typeof l.isResizable === \"boolean\" ? l.isResizable : !l.static && isResizable;\n    const resizeHandlesOptions = l.resizeHandles || resizeHandles;\n\n    // isBounded set on child if set on parent, and child is not explicitly false\n    const bounded = draggable && isBounded && l.isBounded !== false;\n    return /*#__PURE__*/React.createElement(_GridItem.default, {\n      containerWidth: width,\n      cols: cols,\n      margin: margin,\n      containerPadding: containerPadding || margin,\n      maxRows: maxRows,\n      rowHeight: rowHeight,\n      cancel: draggableCancel,\n      handle: draggableHandle,\n      onDragStop: this.onDragStop,\n      onDragStart: this.onDragStart,\n      onDrag: this.onDrag,\n      onResizeStart: this.onResizeStart,\n      onResize: this.onResize,\n      onResizeStop: this.onResizeStop,\n      isDraggable: draggable,\n      isResizable: resizable,\n      isBounded: bounded,\n      useCSSTransforms: useCSSTransforms && mounted,\n      usePercentages: !mounted,\n      transformScale: transformScale,\n      w: l.w,\n      h: l.h,\n      x: l.x,\n      y: l.y,\n      i: l.i,\n      minH: l.minH,\n      minW: l.minW,\n      maxH: l.maxH,\n      maxW: l.maxW,\n      static: l.static,\n      droppingPosition: isDroppingItem ? droppingPosition : undefined,\n      resizeHandles: resizeHandlesOptions,\n      resizeHandle: resizeHandle\n    }, child);\n  }\n  render() /*: React.Element<\"div\">*/{\n    const {\n      className,\n      style,\n      isDroppable,\n      innerRef\n    } = this.props;\n    const mergedClassName = (0, _clsx.default)(layoutClassName, className);\n    const mergedStyle = _objectSpread({\n      height: this.containerHeight()\n    }, style);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: innerRef,\n      className: mergedClassName,\n      style: mergedStyle,\n      onDrop: isDroppable ? this.onDrop : _utils.noop,\n      onDragLeave: isDroppable ? this.onDragLeave : _utils.noop,\n      onDragEnter: isDroppable ? this.onDragEnter : _utils.noop,\n      onDragOver: isDroppable ? this.onDragOver : _utils.noop\n    }, React.Children.map(this.props.children, child => this.processGridItem(child)), isDroppable && this.state.droppingDOMNode && this.processGridItem(this.state.droppingDOMNode, true), this.placeholder());\n  }\n}\nexports.default = ReactGridLayout;\n// TODO publish internal ReactClass displayName transform\n_defineProperty(ReactGridLayout, \"displayName\", \"ReactGridLayout\");\n// Refactored to another module to make way for preval\n_defineProperty(ReactGridLayout, \"propTypes\", _ReactGridLayoutPropTypes.default);\n_defineProperty(ReactGridLayout, \"defaultProps\", {\n  autoSize: true,\n  cols: 12,\n  className: \"\",\n  style: {},\n  draggableHandle: \"\",\n  draggableCancel: \"\",\n  containerPadding: null,\n  rowHeight: 150,\n  maxRows: Infinity,\n  // infinite vertical growth\n  layout: [],\n  margin: [10, 10],\n  isBounded: false,\n  isDraggable: true,\n  isResizable: true,\n  allowOverlap: false,\n  isDroppable: false,\n  useCSSTransforms: true,\n  transformScale: 1,\n  verticalCompact: true,\n  compactType: \"vertical\",\n  preventCollision: false,\n  droppingItem: {\n    i: \"__dropping-elem__\",\n    h: 1,\n    w: 1\n  },\n  resizeHandles: [\"se\"],\n  onLayoutChange: _utils.noop,\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragStop: _utils.noop,\n  onResizeStart: _utils.noop,\n  onResize: _utils.noop,\n  onResizeStop: _utils.noop,\n  onDrop: _utils.noop,\n  onDropDragOver: _utils.noop\n});","map":{"version":3,"names":["_objectSpread","require","default","Object","defineProperty","exports","value","React","_interopRequireWildcard","_fastEquals","_clsx","_interopRequireDefault","_utils","_calculateUtils","_GridItem","_ReactGridLayoutPropTypes","e","__esModule","t","WeakMap","r","n","o","i","f","__proto__","has","get","set","hasOwnProperty","call","getOwnPropertyDescriptor","_defineProperty","_toPropertyKey","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","layoutClassName","isFirefox","test","navigator","userAgent","ReactGridLayout","Component","constructor","arguments","activeDrag","layout","synchronizeLayoutWithChildren","props","children","cols","compactType","allowOverlap","mounted","oldDragItem","oldLayout","oldResizeItem","resizing","droppingDOMNode","x","y","_ref","node","state","l","getLayoutItem","placeholder","w","h","setState","cloneLayoutItem","onDragStart","_ref2","preventCollision","isUserAction","moveElement","onDrag","compact","_ref3","newLayout","onDragStop","onLayoutMaybeChanged","_ref4","onResizeStart","_ref5","size","handle","shouldMoveItem","finalLayout","withLayoutItem","hasCollisions","indexOf","collisions","getAllCollisions","filter","layoutItem","length","static","onResize","_ref6","onResizeStop","_e$nativeEvent$target","preventDefault","stopPropagation","nativeEvent","target","classList","contains","droppingItem","onDropDragOver","margin","rowHeight","maxRows","width","containerPadding","transformScale","onDragOverResult","removeDroppingPlaceholder","finalDroppingItem","gridRect","currentTarget","getBoundingClientRect","layerX","clientX","left","layerY","clientY","top","droppingPosition","positionParams","containerWidth","calculatedPosition","calcXY","createElement","key","isDraggable","shouldUpdatePosition","undefined","dragEnterCounter","item","find","onDrop","componentDidMount","getDerivedStateFromProps","nextProps","prevState","newLayoutBase","deepEqual","propsLayout","childrenEqual","shouldComponentUpdate","nextState","fastRGLPropsEqual","componentDidUpdate","prevProps","containerHeight","autoSize","nbRow","bottom","containerPaddingY","onLayoutChange","useCSSTransforms","className","concat","isResizable","isBounded","processGridItem","child","isDroppingItem","draggableCancel","draggableHandle","resizeHandles","resizeHandle","draggable","resizable","resizeHandlesOptions","bounded","cancel","usePercentages","minH","minW","maxH","maxW","render","style","isDroppable","innerRef","mergedClassName","mergedStyle","height","ref","noop","onDragLeave","onDragEnter","onDragOver","Children","map","Infinity","verticalCompact"],"sources":["/Users/isaacson/Projects/invester/node_modules/react-grid-layout/build/ReactGridLayout.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _fastEquals = require(\"fast-equals\");\nvar _clsx = _interopRequireDefault(require(\"clsx\"));\nvar _utils = require(\"./utils\");\nvar _calculateUtils = require(\"./calculateUtils\");\nvar _GridItem = _interopRequireDefault(require(\"./GridItem\"));\nvar _ReactGridLayoutPropTypes = _interopRequireDefault(require(\"./ReactGridLayoutPropTypes\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\n/*:: import type {\n  ChildrenArray as ReactChildrenArray,\n  Element as ReactElement\n} from \"react\";*/\n/*:: import type {\n  CompactType,\n  GridResizeEvent,\n  GridDragEvent,\n  DragOverEvent,\n  Layout,\n  DroppingPosition,\n  LayoutItem\n} from \"./utils\";*/\n// Types\n/*:: import type { PositionParams } from \"./calculateUtils\";*/\n/*:: type State = {\n  activeDrag: ?LayoutItem,\n  layout: Layout,\n  mounted: boolean,\n  oldDragItem: ?LayoutItem,\n  oldLayout: ?Layout,\n  oldResizeItem: ?LayoutItem,\n  resizing: boolean,\n  droppingDOMNode: ?ReactElement<any>,\n  droppingPosition?: DroppingPosition,\n  // Mirrored props\n  children: ReactChildrenArray<ReactElement<any>>,\n  compactType?: CompactType,\n  propsLayout?: Layout\n};*/\n/*:: import type { Props, DefaultProps } from \"./ReactGridLayoutPropTypes\";*/\n// End Types\nconst layoutClassName = \"react-grid-layout\";\nlet isFirefox = false;\n// Try...catch will protect from navigator not existing (e.g. node) or a bad implementation of navigator\ntry {\n  isFirefox = /firefox/i.test(navigator.userAgent);\n} catch (e) {\n  /* Ignore */\n}\n\n/**\n * A reactive, fluid grid layout with draggable, resizable components.\n */\n\nclass ReactGridLayout extends React.Component /*:: <Props, State>*/{\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", {\n      activeDrag: null,\n      layout: (0, _utils.synchronizeLayoutWithChildren)(this.props.layout, this.props.children, this.props.cols,\n      // Legacy support for verticalCompact: false\n      (0, _utils.compactType)(this.props), this.props.allowOverlap),\n      mounted: false,\n      oldDragItem: null,\n      oldLayout: null,\n      oldResizeItem: null,\n      resizing: false,\n      droppingDOMNode: null,\n      children: []\n    });\n    _defineProperty(this, \"dragEnterCounter\", 0);\n    /**\n     * When dragging starts\n     * @param {String} i Id of the child\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDragStart\", (i /*: string*/, x /*: number*/, y /*: number*/, _ref /*:: */) => {\n      let {\n        e,\n        node\n      } /*: GridDragEvent*/ = _ref /*: GridDragEvent*/;\n      const {\n        layout\n      } = this.state;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Create placeholder (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        placeholder: true,\n        i: i\n      };\n      this.setState({\n        oldDragItem: (0, _utils.cloneLayoutItem)(l),\n        oldLayout: layout,\n        activeDrag: placeholder\n      });\n      return this.props.onDragStart(layout, l, l, null, e, node);\n    });\n    /**\n     * Each drag movement create a new dragelement and move the element to the dragged location\n     * @param {String} i Id of the child\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDrag\", (i, x, y, _ref2) => {\n      let {\n        e,\n        node\n      } = _ref2;\n      const {\n        oldDragItem\n      } = this.state;\n      let {\n        layout\n      } = this.state;\n      const {\n        cols,\n        allowOverlap,\n        preventCollision\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Create placeholder (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        placeholder: true,\n        i: i\n      };\n\n      // Move the element to the dragged location.\n      const isUserAction = true;\n      layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n      this.props.onDrag(layout, oldDragItem, l, placeholder, e, node);\n      this.setState({\n        layout: allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols),\n        activeDrag: placeholder\n      });\n    });\n    /**\n     * When dragging stops, figure out which position the element is closest to and update its x and y.\n     * @param  {String} i Index of the child.\n     * @param {Number} x X position of the move\n     * @param {Number} y Y position of the move\n     * @param {Event} e The mousedown event\n     * @param {Element} node The current dragging DOM element\n     */\n    _defineProperty(this, \"onDragStop\", (i, x, y, _ref3) => {\n      let {\n        e,\n        node\n      } = _ref3;\n      if (!this.state.activeDrag) return;\n      const {\n        oldDragItem\n      } = this.state;\n      let {\n        layout\n      } = this.state;\n      const {\n        cols,\n        preventCollision,\n        allowOverlap\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n\n      // Move the element here\n      const isUserAction = true;\n      layout = (0, _utils.moveElement)(layout, l, x, y, isUserAction, preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n\n      // Set state\n      const newLayout = allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols);\n      this.props.onDragStop(newLayout, oldDragItem, l, null, e, node);\n      const {\n        oldLayout\n      } = this.state;\n      this.setState({\n        activeDrag: null,\n        layout: newLayout,\n        oldDragItem: null,\n        oldLayout: null\n      });\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    });\n    _defineProperty(this, \"onResizeStart\", (i, w, h, _ref4) => {\n      let {\n        e,\n        node\n      } = _ref4;\n      const {\n        layout\n      } = this.state;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n      if (!l) return;\n      this.setState({\n        oldResizeItem: (0, _utils.cloneLayoutItem)(l),\n        oldLayout: this.state.layout,\n        resizing: true\n      });\n      this.props.onResizeStart(layout, l, l, null, e, node);\n    });\n    _defineProperty(this, \"onResize\", (i, w, h, _ref5) => {\n      let {\n        e,\n        node,\n        size,\n        handle\n      } = _ref5;\n      const {\n        oldResizeItem\n      } = this.state;\n      const {\n        layout\n      } = this.state;\n      const {\n        cols,\n        preventCollision,\n        allowOverlap\n      } = this.props;\n      let shouldMoveItem = false;\n      let finalLayout;\n      let x;\n      let y;\n      const [newLayout, l] = (0, _utils.withLayoutItem)(layout, i, l => {\n        let hasCollisions;\n        x = l.x;\n        y = l.y;\n        if ([\"sw\", \"w\", \"nw\", \"n\", \"ne\"].indexOf(handle) !== -1) {\n          if ([\"sw\", \"nw\", \"w\"].indexOf(handle) !== -1) {\n            x = l.x + (l.w - w);\n            w = l.x !== x && x < 0 ? l.w : w;\n            x = x < 0 ? 0 : x;\n          }\n          if ([\"ne\", \"n\", \"nw\"].indexOf(handle) !== -1) {\n            y = l.y + (l.h - h);\n            h = l.y !== y && y < 0 ? l.h : h;\n            y = y < 0 ? 0 : y;\n          }\n          shouldMoveItem = true;\n        }\n\n        // Something like quad tree should be used\n        // to find collisions faster\n        if (preventCollision && !allowOverlap) {\n          const collisions = (0, _utils.getAllCollisions)(layout, {\n            ...l,\n            w,\n            h,\n            x,\n            y\n          }).filter(layoutItem => layoutItem.i !== l.i);\n          hasCollisions = collisions.length > 0;\n\n          // If we're colliding, we need adjust the placeholder.\n          if (hasCollisions) {\n            // Reset layoutItem dimensions if there were collisions\n            y = l.y;\n            h = l.h;\n            x = l.x;\n            w = l.w;\n            shouldMoveItem = false;\n          }\n        }\n        l.w = w;\n        l.h = h;\n        return l;\n      });\n\n      // Shouldn't ever happen, but typechecking makes it necessary\n      if (!l) return;\n      finalLayout = newLayout;\n      if (shouldMoveItem) {\n        // Move the element to the new position.\n        const isUserAction = true;\n        finalLayout = (0, _utils.moveElement)(newLayout, l, x, y, isUserAction, this.props.preventCollision, (0, _utils.compactType)(this.props), cols, allowOverlap);\n      }\n\n      // Create placeholder element (display only)\n      const placeholder = {\n        w: l.w,\n        h: l.h,\n        x: l.x,\n        y: l.y,\n        static: true,\n        i: i\n      };\n      this.props.onResize(finalLayout, oldResizeItem, l, placeholder, e, node);\n\n      // Re-compact the newLayout and set the drag placeholder.\n      this.setState({\n        layout: allowOverlap ? finalLayout : (0, _utils.compact)(finalLayout, (0, _utils.compactType)(this.props), cols),\n        activeDrag: placeholder\n      });\n    });\n    _defineProperty(this, \"onResizeStop\", (i, w, h, _ref6) => {\n      let {\n        e,\n        node\n      } = _ref6;\n      const {\n        layout,\n        oldResizeItem\n      } = this.state;\n      const {\n        cols,\n        allowOverlap\n      } = this.props;\n      const l = (0, _utils.getLayoutItem)(layout, i);\n\n      // Set state\n      const newLayout = allowOverlap ? layout : (0, _utils.compact)(layout, (0, _utils.compactType)(this.props), cols);\n      this.props.onResizeStop(newLayout, oldResizeItem, l, null, e, node);\n      const {\n        oldLayout\n      } = this.state;\n      this.setState({\n        activeDrag: null,\n        layout: newLayout,\n        oldResizeItem: null,\n        oldLayout: null,\n        resizing: false\n      });\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    });\n    // Called while dragging an element. Part of browser native drag/drop API.\n    // Native event target might be the layout itself, or an element within the layout.\n    _defineProperty(this, \"onDragOver\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n\n      // we should ignore events from layout's children in Firefox\n      // to avoid unpredictable jumping of a dropping placeholder\n      // FIXME remove this hack\n      if (isFirefox &&\n      // $FlowIgnore can't figure this out\n      !e.nativeEvent.target?.classList.contains(layoutClassName)) {\n        return false;\n      }\n      const {\n        droppingItem,\n        onDropDragOver,\n        margin,\n        cols,\n        rowHeight,\n        maxRows,\n        width,\n        containerPadding,\n        transformScale\n      } = this.props;\n      // Allow user to customize the dropping item or short-circuit the drop based on the results\n      // of the `onDragOver(e: Event)` callback.\n      const onDragOverResult = onDropDragOver?.(e);\n      if (onDragOverResult === false) {\n        if (this.state.droppingDOMNode) {\n          this.removeDroppingPlaceholder();\n        }\n        return false;\n      }\n      const finalDroppingItem = {\n        ...droppingItem,\n        ...onDragOverResult\n      };\n      const {\n        layout\n      } = this.state;\n\n      // $FlowIgnore missing def\n      const gridRect = e.currentTarget.getBoundingClientRect(); // The grid's position in the viewport\n\n      // Calculate the mouse position relative to the grid\n      const layerX = e.clientX - gridRect.left;\n      const layerY = e.clientY - gridRect.top;\n      const droppingPosition = {\n        left: layerX / transformScale,\n        top: layerY / transformScale,\n        e\n      };\n      if (!this.state.droppingDOMNode) {\n        const positionParams /*: PositionParams*/ = {\n          cols,\n          margin,\n          maxRows,\n          rowHeight,\n          containerWidth: width,\n          containerPadding: containerPadding || margin\n        };\n        const calculatedPosition = (0, _calculateUtils.calcXY)(positionParams, layerY, layerX, finalDroppingItem.w, finalDroppingItem.h);\n        this.setState({\n          droppingDOMNode: /*#__PURE__*/React.createElement(\"div\", {\n            key: finalDroppingItem.i\n          }),\n          droppingPosition,\n          layout: [...layout, {\n            ...finalDroppingItem,\n            x: calculatedPosition.x,\n            y: calculatedPosition.y,\n            static: false,\n            isDraggable: true\n          }]\n        });\n      } else if (this.state.droppingPosition) {\n        const {\n          left,\n          top\n        } = this.state.droppingPosition;\n        const shouldUpdatePosition = left != layerX || top != layerY;\n        if (shouldUpdatePosition) {\n          this.setState({\n            droppingPosition\n          });\n        }\n      }\n    });\n    _defineProperty(this, \"removeDroppingPlaceholder\", () => {\n      const {\n        droppingItem,\n        cols\n      } = this.props;\n      const {\n        layout\n      } = this.state;\n      const newLayout = (0, _utils.compact)(layout.filter(l => l.i !== droppingItem.i), (0, _utils.compactType)(this.props), cols, this.props.allowOverlap);\n      this.setState({\n        layout: newLayout,\n        droppingDOMNode: null,\n        activeDrag: null,\n        droppingPosition: undefined\n      });\n    });\n    _defineProperty(this, \"onDragLeave\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      this.dragEnterCounter--;\n\n      // onDragLeave can be triggered on each layout's child.\n      // But we know that count of dragEnter and dragLeave events\n      // will be balanced after leaving the layout's container\n      // so we can increase and decrease count of dragEnter and\n      // when it'll be equal to 0 we'll remove the placeholder\n      if (this.dragEnterCounter === 0) {\n        this.removeDroppingPlaceholder();\n      }\n    });\n    _defineProperty(this, \"onDragEnter\", e => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      this.dragEnterCounter++;\n    });\n    _defineProperty(this, \"onDrop\", (e /*: Event*/) => {\n      e.preventDefault(); // Prevent any browser native action\n      e.stopPropagation();\n      const {\n        droppingItem\n      } = this.props;\n      const {\n        layout\n      } = this.state;\n      const item = layout.find(l => l.i === droppingItem.i);\n\n      // reset dragEnter counter on drop\n      this.dragEnterCounter = 0;\n      this.removeDroppingPlaceholder();\n      this.props.onDrop(layout, item, e);\n    });\n  }\n  componentDidMount() {\n    this.setState({\n      mounted: true\n    });\n    // Possibly call back with layout on mount. This should be done after correcting the layout width\n    // to ensure we don't rerender with the wrong width.\n    this.onLayoutMaybeChanged(this.state.layout, this.props.layout);\n  }\n  static getDerivedStateFromProps(nextProps /*: Props*/, prevState /*: State*/) /*: $Shape<State> | null*/{\n    let newLayoutBase;\n    if (prevState.activeDrag) {\n      return null;\n    }\n\n    // Legacy support for compactType\n    // Allow parent to set layout directly.\n    if (!(0, _fastEquals.deepEqual)(nextProps.layout, prevState.propsLayout) || nextProps.compactType !== prevState.compactType) {\n      newLayoutBase = nextProps.layout;\n    } else if (!(0, _utils.childrenEqual)(nextProps.children, prevState.children)) {\n      // If children change, also regenerate the layout. Use our state\n      // as the base in case because it may be more up to date than\n      // what is in props.\n      newLayoutBase = prevState.layout;\n    }\n\n    // We need to regenerate the layout.\n    if (newLayoutBase) {\n      const newLayout = (0, _utils.synchronizeLayoutWithChildren)(newLayoutBase, nextProps.children, nextProps.cols, (0, _utils.compactType)(nextProps), nextProps.allowOverlap);\n      return {\n        layout: newLayout,\n        // We need to save these props to state for using\n        // getDerivedStateFromProps instead of componentDidMount (in which we would get extra rerender)\n        compactType: nextProps.compactType,\n        children: nextProps.children,\n        propsLayout: nextProps.layout\n      };\n    }\n    return null;\n  }\n  shouldComponentUpdate(nextProps /*: Props*/, nextState /*: State*/) /*: boolean*/{\n    return (\n      // NOTE: this is almost always unequal. Therefore the only way to get better performance\n      // from SCU is if the user intentionally memoizes children. If they do, and they can\n      // handle changes properly, performance will increase.\n      this.props.children !== nextProps.children || !(0, _utils.fastRGLPropsEqual)(this.props, nextProps, _fastEquals.deepEqual) || this.state.activeDrag !== nextState.activeDrag || this.state.mounted !== nextState.mounted || this.state.droppingPosition !== nextState.droppingPosition\n    );\n  }\n  componentDidUpdate(prevProps /*: Props*/, prevState /*: State*/) {\n    if (!this.state.activeDrag) {\n      const newLayout = this.state.layout;\n      const oldLayout = prevState.layout;\n      this.onLayoutMaybeChanged(newLayout, oldLayout);\n    }\n  }\n\n  /**\n   * Calculates a pixel value for the container.\n   * @return {String} Container height in pixels.\n   */\n  containerHeight() /*: ?string*/{\n    if (!this.props.autoSize) return;\n    const nbRow = (0, _utils.bottom)(this.state.layout);\n    const containerPaddingY = this.props.containerPadding ? this.props.containerPadding[1] : this.props.margin[1];\n    return nbRow * this.props.rowHeight + (nbRow - 1) * this.props.margin[1] + containerPaddingY * 2 + \"px\";\n  }\n  onLayoutMaybeChanged(newLayout /*: Layout*/, oldLayout /*: ?Layout*/) {\n    if (!oldLayout) oldLayout = this.state.layout;\n    if (!(0, _fastEquals.deepEqual)(oldLayout, newLayout)) {\n      this.props.onLayoutChange(newLayout);\n    }\n  }\n  /**\n   * Create a placeholder object.\n   * @return {Element} Placeholder div.\n   */\n  placeholder() /*: ?ReactElement<any>*/{\n    const {\n      activeDrag\n    } = this.state;\n    if (!activeDrag) return null;\n    const {\n      width,\n      cols,\n      margin,\n      containerPadding,\n      rowHeight,\n      maxRows,\n      useCSSTransforms,\n      transformScale\n    } = this.props;\n\n    // {...this.state.activeDrag} is pretty slow, actually\n    return /*#__PURE__*/React.createElement(_GridItem.default, {\n      w: activeDrag.w,\n      h: activeDrag.h,\n      x: activeDrag.x,\n      y: activeDrag.y,\n      i: activeDrag.i,\n      className: `react-grid-placeholder ${this.state.resizing ? \"placeholder-resizing\" : \"\"}`,\n      containerWidth: width,\n      cols: cols,\n      margin: margin,\n      containerPadding: containerPadding || margin,\n      maxRows: maxRows,\n      rowHeight: rowHeight,\n      isDraggable: false,\n      isResizable: false,\n      isBounded: false,\n      useCSSTransforms: useCSSTransforms,\n      transformScale: transformScale\n    }, /*#__PURE__*/React.createElement(\"div\", null));\n  }\n\n  /**\n   * Given a grid item, set its style attributes & surround in a <Draggable>.\n   * @param  {Element} child React element.\n   * @return {Element}       Element wrapped in draggable and properly placed.\n   */\n  processGridItem(child /*: ReactElement<any>*/, isDroppingItem /*: boolean*/) /*: ?ReactElement<any>*/{\n    if (!child || !child.key) return;\n    const l = (0, _utils.getLayoutItem)(this.state.layout, String(child.key));\n    if (!l) return null;\n    const {\n      width,\n      cols,\n      margin,\n      containerPadding,\n      rowHeight,\n      maxRows,\n      isDraggable,\n      isResizable,\n      isBounded,\n      useCSSTransforms,\n      transformScale,\n      draggableCancel,\n      draggableHandle,\n      resizeHandles,\n      resizeHandle\n    } = this.props;\n    const {\n      mounted,\n      droppingPosition\n    } = this.state;\n\n    // Determine user manipulations possible.\n    // If an item is static, it can't be manipulated by default.\n    // Any properties defined directly on the grid item will take precedence.\n    const draggable = typeof l.isDraggable === \"boolean\" ? l.isDraggable : !l.static && isDraggable;\n    const resizable = typeof l.isResizable === \"boolean\" ? l.isResizable : !l.static && isResizable;\n    const resizeHandlesOptions = l.resizeHandles || resizeHandles;\n\n    // isBounded set on child if set on parent, and child is not explicitly false\n    const bounded = draggable && isBounded && l.isBounded !== false;\n    return /*#__PURE__*/React.createElement(_GridItem.default, {\n      containerWidth: width,\n      cols: cols,\n      margin: margin,\n      containerPadding: containerPadding || margin,\n      maxRows: maxRows,\n      rowHeight: rowHeight,\n      cancel: draggableCancel,\n      handle: draggableHandle,\n      onDragStop: this.onDragStop,\n      onDragStart: this.onDragStart,\n      onDrag: this.onDrag,\n      onResizeStart: this.onResizeStart,\n      onResize: this.onResize,\n      onResizeStop: this.onResizeStop,\n      isDraggable: draggable,\n      isResizable: resizable,\n      isBounded: bounded,\n      useCSSTransforms: useCSSTransforms && mounted,\n      usePercentages: !mounted,\n      transformScale: transformScale,\n      w: l.w,\n      h: l.h,\n      x: l.x,\n      y: l.y,\n      i: l.i,\n      minH: l.minH,\n      minW: l.minW,\n      maxH: l.maxH,\n      maxW: l.maxW,\n      static: l.static,\n      droppingPosition: isDroppingItem ? droppingPosition : undefined,\n      resizeHandles: resizeHandlesOptions,\n      resizeHandle: resizeHandle\n    }, child);\n  }\n  render() /*: React.Element<\"div\">*/{\n    const {\n      className,\n      style,\n      isDroppable,\n      innerRef\n    } = this.props;\n    const mergedClassName = (0, _clsx.default)(layoutClassName, className);\n    const mergedStyle = {\n      height: this.containerHeight(),\n      ...style\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: innerRef,\n      className: mergedClassName,\n      style: mergedStyle,\n      onDrop: isDroppable ? this.onDrop : _utils.noop,\n      onDragLeave: isDroppable ? this.onDragLeave : _utils.noop,\n      onDragEnter: isDroppable ? this.onDragEnter : _utils.noop,\n      onDragOver: isDroppable ? this.onDragOver : _utils.noop\n    }, React.Children.map(this.props.children, child => this.processGridItem(child)), isDroppable && this.state.droppingDOMNode && this.processGridItem(this.state.droppingDOMNode, true), this.placeholder());\n  }\n}\nexports.default = ReactGridLayout;\n// TODO publish internal ReactClass displayName transform\n_defineProperty(ReactGridLayout, \"displayName\", \"ReactGridLayout\");\n// Refactored to another module to make way for preval\n_defineProperty(ReactGridLayout, \"propTypes\", _ReactGridLayoutPropTypes.default);\n_defineProperty(ReactGridLayout, \"defaultProps\", {\n  autoSize: true,\n  cols: 12,\n  className: \"\",\n  style: {},\n  draggableHandle: \"\",\n  draggableCancel: \"\",\n  containerPadding: null,\n  rowHeight: 150,\n  maxRows: Infinity,\n  // infinite vertical growth\n  layout: [],\n  margin: [10, 10],\n  isBounded: false,\n  isDraggable: true,\n  isResizable: true,\n  allowOverlap: false,\n  isDroppable: false,\n  useCSSTransforms: true,\n  transformScale: 1,\n  verticalCompact: true,\n  compactType: \"vertical\",\n  preventCollision: false,\n  droppingItem: {\n    i: \"__dropping-elem__\",\n    h: 1,\n    w: 1\n  },\n  resizeHandles: [\"se\"],\n  onLayoutChange: _utils.noop,\n  onDragStart: _utils.noop,\n  onDrag: _utils.noop,\n  onDragStop: _utils.noop,\n  onResizeStart: _utils.noop,\n  onResize: _utils.noop,\n  onResizeStop: _utils.noop,\n  onDrop: _utils.noop,\n  onDropDragOver: _utils.noop\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}