{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _fastEquals = require(\"fast-equals\");\nvar _utils = require(\"./utils\");\nvar _responsiveUtils = require(\"./responsiveUtils\");\nvar _ReactGridLayout = _interopRequireDefault(require(\"./ReactGridLayout\"));\nfunction _interopRequireDefault(e) {\n  return e && e.__esModule ? e : {\n    default: e\n  };\n}\nfunction _interopRequireWildcard(e, t) {\n  if (\"function\" == typeof WeakMap) var r = new WeakMap(),\n    n = new WeakMap();\n  return (_interopRequireWildcard = function (e, t) {\n    if (!t && e && e.__esModule) return e;\n    var o,\n      i,\n      f = {\n        __proto__: null,\n        default: e\n      };\n    if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f;\n    if (o = t ? n : r) {\n      if (o.has(e)) return o.get(e);\n      o.set(e, f);\n    }\n    for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]);\n    return f;\n  })(e, t);\n}\nfunction _extends() {\n  return _extends = Object.assign ? Object.assign.bind() : function (n) {\n    for (var e = 1; e < arguments.length; e++) {\n      var t = arguments[e];\n      for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]);\n    }\n    return n;\n  }, _extends.apply(null, arguments);\n}\nfunction _defineProperty(e, r, t) {\n  return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n} /*:: import { type Layout, type Pick } from \"./utils\";*/ /*:: import { type ResponsiveLayout, type OnLayoutChangeCallback, type Breakpoints } from \"./responsiveUtils\";*/\n// $FlowFixMe[method-unbinding]\nconst type = obj => Object.prototype.toString.call(obj);\n\n/**\n * Get a value of margin or containerPadding.\n *\n * @param  {Array | Object} param Margin | containerPadding, e.g. [10, 10] | {lg: [10, 10], ...}.\n * @param  {String} breakpoint   Breakpoint: lg, md, sm, xs and etc.\n * @return {Array}\n */\nfunction getIndentationValue /*:: <T: ?[number, number]>*/(param /*: { [key: string]: T } | T*/, breakpoint /*: string*/) /*: T*/{\n  // $FlowIgnore TODO fix this typedef\n  if (param == null) return null;\n  // $FlowIgnore TODO fix this typedef\n  return Array.isArray(param) ? param : param[breakpoint];\n}\n/*:: type State = {\n  layout: Layout,\n  breakpoint: string,\n  cols: number,\n  layouts?: ResponsiveLayout<string>\n};*/\n/*:: type Props<Breakpoint: string = string> = {|\n  ...React.ElementConfig<typeof ReactGridLayout>,\n\n  // Responsive config\n  breakpoint?: ?Breakpoint,\n  breakpoints: Breakpoints<Breakpoint>,\n  cols: { [key: Breakpoint]: number },\n  layouts: ResponsiveLayout<Breakpoint>,\n  width: number,\n  margin: { [key: Breakpoint]: [number, number] } | [number, number],\n  /* prettier-ignore *-/\n  containerPadding: { [key: Breakpoint]: ?[number, number] } | ?[number, number],\n\n  // Callbacks\n  onBreakpointChange: (Breakpoint, cols: number) => void,\n  onLayoutChange: OnLayoutChangeCallback,\n  onWidthChange: (\n    containerWidth: number,\n    margin: [number, number],\n    cols: number,\n    containerPadding: ?[number, number]\n  ) => void\n|};*/\n/*:: type DefaultProps = Pick<\n  Props<>,\n  {|\n    allowOverlap: 0,\n    breakpoints: 0,\n    cols: 0,\n    containerPadding: 0,\n    layouts: 0,\n    margin: 0,\n    onBreakpointChange: 0,\n    onLayoutChange: 0,\n    onWidthChange: 0\n  |}\n>;*/\nclass ResponsiveReactGridLayout extends React.Component\n/*:: <\n  Props<>,\n  State\n>*/ {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", this.generateInitialState());\n    // wrap layouts so we do not need to pass layouts to child\n    _defineProperty(this, \"onLayoutChange\", (layout /*: Layout*/) => {\n      this.props.onLayoutChange(layout, {\n        ...this.props.layouts,\n        [this.state.breakpoint]: layout\n      });\n    });\n  }\n  generateInitialState() /*: State*/{\n    const {\n      width,\n      breakpoints,\n      layouts,\n      cols\n    } = this.props;\n    const breakpoint = (0, _responsiveUtils.getBreakpointFromWidth)(breakpoints, width);\n    const colNo = (0, _responsiveUtils.getColsFromBreakpoint)(breakpoint, cols);\n    // verticalCompact compatibility, now deprecated\n    const compactType = this.props.verticalCompact === false ? null : this.props.compactType;\n    // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\n    // for this layout.\n    const initialLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, breakpoint, breakpoint, colNo, compactType);\n    return {\n      layout: initialLayout,\n      breakpoint: breakpoint,\n      cols: colNo\n    };\n  }\n  static getDerivedStateFromProps(nextProps /*: Props<*>*/, prevState /*: State*/) /*: ?$Shape<State>*/{\n    if (!(0, _fastEquals.deepEqual)(nextProps.layouts, prevState.layouts)) {\n      // Allow parent to set layouts directly.\n      const {\n        breakpoint,\n        cols\n      } = prevState;\n\n      // Since we're setting an entirely new layout object, we must generate a new responsive layout\n      // if one does not exist.\n      const newLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(nextProps.layouts, nextProps.breakpoints, breakpoint, breakpoint, cols, nextProps.compactType);\n      return {\n        layout: newLayout,\n        layouts: nextProps.layouts\n      };\n    }\n    return null;\n  }\n  componentDidUpdate(prevProps /*: Props<*>*/) {\n    // Allow parent to set width or breakpoint directly.\n    if (this.props.width != prevProps.width || this.props.breakpoint !== prevProps.breakpoint || !(0, _fastEquals.deepEqual)(this.props.breakpoints, prevProps.breakpoints) || !(0, _fastEquals.deepEqual)(this.props.cols, prevProps.cols)) {\n      this.onWidthChange(prevProps);\n    }\n  }\n  /**\n   * When the width changes work through breakpoints and reset state with the new width & breakpoint.\n   * Width changes are necessary to figure out the widget widths.\n   */\n  onWidthChange(prevProps /*: Props<*>*/) {\n    const {\n      breakpoints,\n      cols,\n      layouts,\n      compactType\n    } = this.props;\n    const newBreakpoint = this.props.breakpoint || (0, _responsiveUtils.getBreakpointFromWidth)(this.props.breakpoints, this.props.width);\n    const lastBreakpoint = this.state.breakpoint;\n    const newCols /*: number*/ = (0, _responsiveUtils.getColsFromBreakpoint)(newBreakpoint, cols);\n    const newLayouts = {\n      ...layouts\n    };\n\n    // Breakpoint change\n    if (lastBreakpoint !== newBreakpoint || prevProps.breakpoints !== breakpoints || prevProps.cols !== cols) {\n      // Preserve the current layout if the current breakpoint is not present in the next layouts.\n      if (!(lastBreakpoint in newLayouts)) newLayouts[lastBreakpoint] = (0, _utils.cloneLayout)(this.state.layout);\n\n      // Find or generate a new layout.\n      let layout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(newLayouts, breakpoints, newBreakpoint, lastBreakpoint, newCols, compactType);\n\n      // This adds missing items.\n      layout = (0, _utils.synchronizeLayoutWithChildren)(layout, this.props.children, newCols, compactType, this.props.allowOverlap);\n\n      // Store the new layout.\n      newLayouts[newBreakpoint] = layout;\n\n      // callbacks\n      this.props.onBreakpointChange(newBreakpoint, newCols);\n      this.props.onLayoutChange(layout, newLayouts);\n      this.setState({\n        breakpoint: newBreakpoint,\n        layout: layout,\n        cols: newCols\n      });\n    }\n    const margin = getIndentationValue(this.props.margin, newBreakpoint);\n    const containerPadding = getIndentationValue(this.props.containerPadding, newBreakpoint);\n\n    //call onWidthChange on every change of width, not only on breakpoint changes\n    this.props.onWidthChange(this.props.width, margin, newCols, containerPadding);\n  }\n  render() /*: React.Element<typeof ReactGridLayout>*/{\n    /* eslint-disable no-unused-vars */\n    const {\n      breakpoint,\n      breakpoints,\n      cols,\n      layouts,\n      margin,\n      containerPadding,\n      onBreakpointChange,\n      onLayoutChange,\n      onWidthChange,\n      ...other\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    return /*#__PURE__*/React.createElement(_ReactGridLayout.default, _extends({}, other, {\n      // $FlowIgnore should allow nullable here due to DefaultProps\n      margin: getIndentationValue(margin, this.state.breakpoint),\n      containerPadding: getIndentationValue(containerPadding, this.state.breakpoint),\n      onLayoutChange: this.onLayoutChange,\n      layout: this.state.layout,\n      cols: this.state.cols\n    }));\n  }\n}\nexports.default = ResponsiveReactGridLayout;\n// This should only include propTypes needed in this code; RGL itself\n// will do validation of the rest props passed to it.\n_defineProperty(ResponsiveReactGridLayout, \"propTypes\", {\n  //\n  // Basic props\n  //\n\n  // Optional, but if you are managing width yourself you may want to set the breakpoint\n  // yourself as well.\n  breakpoint: _propTypes.default.string,\n  // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}\n  breakpoints: _propTypes.default.object,\n  allowOverlap: _propTypes.default.bool,\n  // # of cols. This is a breakpoint -> cols map\n  cols: _propTypes.default.object,\n  // # of margin. This is a breakpoint -> margin map\n  // e.g. { lg: [5, 5], md: [10, 10], sm: [15, 15] }\n  // Margin between items [x, y] in px\n  // e.g. [10, 10]\n  margin: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n  // # of containerPadding. This is a breakpoint -> containerPadding map\n  // e.g. { lg: [5, 5], md: [10, 10], sm: [15, 15] }\n  // Padding inside the container [x, y] in px\n  // e.g. [10, 10]\n  containerPadding: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n  // layouts is an object mapping breakpoints to layouts.\n  // e.g. {lg: Layout, md: Layout, ...}\n  layouts(props /*: Props<>*/, propName /*: string*/) {\n    if (type(props[propName]) !== \"[object Object]\") {\n      throw new Error(\"Layout property must be an object. Received: \" + type(props[propName]));\n    }\n    Object.keys(props[propName]).forEach(key => {\n      if (!(key in props.breakpoints)) {\n        throw new Error(\"Each key in layouts must align with a key in breakpoints.\");\n      }\n      (0, _utils.validateLayout)(props.layouts[key], \"layouts.\" + key);\n    });\n  },\n  // The width of this component.\n  // Required in this propTypes stanza because generateInitialState() will fail without it.\n  width: _propTypes.default.number.isRequired,\n  //\n  // Callbacks\n  //\n\n  // Calls back with breakpoint and new # cols\n  onBreakpointChange: _propTypes.default.func,\n  // Callback so you can save the layout.\n  // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\n  onLayoutChange: _propTypes.default.func,\n  // Calls back with (containerWidth, margin, cols, containerPadding)\n  onWidthChange: _propTypes.default.func\n});\n_defineProperty(ResponsiveReactGridLayout, \"defaultProps\", {\n  breakpoints: {\n    lg: 1200,\n    md: 996,\n    sm: 768,\n    xs: 480,\n    xxs: 0\n  },\n  cols: {\n    lg: 12,\n    md: 10,\n    sm: 6,\n    xs: 4,\n    xxs: 2\n  },\n  containerPadding: {\n    lg: null,\n    md: null,\n    sm: null,\n    xs: null,\n    xxs: null\n  },\n  layouts: {},\n  margin: [10, 10],\n  allowOverlap: false,\n  onBreakpointChange: _utils.noop,\n  onLayoutChange: _utils.noop,\n  onWidthChange: _utils.noop\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","default","React","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_fastEquals","_utils","_responsiveUtils","_ReactGridLayout","e","__esModule","t","WeakMap","r","n","o","i","f","__proto__","has","get","set","hasOwnProperty","call","getOwnPropertyDescriptor","_extends","assign","bind","arguments","length","apply","_defineProperty","_toPropertyKey","enumerable","configurable","writable","_toPrimitive","Symbol","toPrimitive","TypeError","String","Number","type","obj","prototype","toString","getIndentationValue","param","breakpoint","Array","isArray","ResponsiveReactGridLayout","Component","constructor","generateInitialState","layout","props","onLayoutChange","layouts","state","width","breakpoints","cols","getBreakpointFromWidth","colNo","getColsFromBreakpoint","compactType","verticalCompact","initialLayout","findOrGenerateResponsiveLayout","getDerivedStateFromProps","nextProps","prevState","deepEqual","newLayout","componentDidUpdate","prevProps","onWidthChange","newBreakpoint","lastBreakpoint","newCols","newLayouts","cloneLayout","synchronizeLayoutWithChildren","children","allowOverlap","onBreakpointChange","setState","margin","containerPadding","render","other","createElement","string","object","bool","oneOfType","array","propName","Error","keys","forEach","key","validateLayout","number","isRequired","func","lg","md","sm","xs","xxs","noop"],"sources":["/Users/isaacson/Projects/invester/node_modules/react-grid-layout/build/ResponsiveReactGridLayout.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _fastEquals = require(\"fast-equals\");\nvar _utils = require(\"./utils\");\nvar _responsiveUtils = require(\"./responsiveUtils\");\nvar _ReactGridLayout = _interopRequireDefault(require(\"./ReactGridLayout\"));\nfunction _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); } /*:: import { type Layout, type Pick } from \"./utils\";*/ /*:: import { type ResponsiveLayout, type OnLayoutChangeCallback, type Breakpoints } from \"./responsiveUtils\";*/\n// $FlowFixMe[method-unbinding]\nconst type = obj => Object.prototype.toString.call(obj);\n\n/**\n * Get a value of margin or containerPadding.\n *\n * @param  {Array | Object} param Margin | containerPadding, e.g. [10, 10] | {lg: [10, 10], ...}.\n * @param  {String} breakpoint   Breakpoint: lg, md, sm, xs and etc.\n * @return {Array}\n */\nfunction getIndentationValue /*:: <T: ?[number, number]>*/(param /*: { [key: string]: T } | T*/, breakpoint /*: string*/) /*: T*/{\n  // $FlowIgnore TODO fix this typedef\n  if (param == null) return null;\n  // $FlowIgnore TODO fix this typedef\n  return Array.isArray(param) ? param : param[breakpoint];\n}\n/*:: type State = {\n  layout: Layout,\n  breakpoint: string,\n  cols: number,\n  layouts?: ResponsiveLayout<string>\n};*/\n/*:: type Props<Breakpoint: string = string> = {|\n  ...React.ElementConfig<typeof ReactGridLayout>,\n\n  // Responsive config\n  breakpoint?: ?Breakpoint,\n  breakpoints: Breakpoints<Breakpoint>,\n  cols: { [key: Breakpoint]: number },\n  layouts: ResponsiveLayout<Breakpoint>,\n  width: number,\n  margin: { [key: Breakpoint]: [number, number] } | [number, number],\n  /* prettier-ignore *-/\n  containerPadding: { [key: Breakpoint]: ?[number, number] } | ?[number, number],\n\n  // Callbacks\n  onBreakpointChange: (Breakpoint, cols: number) => void,\n  onLayoutChange: OnLayoutChangeCallback,\n  onWidthChange: (\n    containerWidth: number,\n    margin: [number, number],\n    cols: number,\n    containerPadding: ?[number, number]\n  ) => void\n|};*/\n/*:: type DefaultProps = Pick<\n  Props<>,\n  {|\n    allowOverlap: 0,\n    breakpoints: 0,\n    cols: 0,\n    containerPadding: 0,\n    layouts: 0,\n    margin: 0,\n    onBreakpointChange: 0,\n    onLayoutChange: 0,\n    onWidthChange: 0\n  |}\n>;*/\nclass ResponsiveReactGridLayout extends React.Component\n/*:: <\n  Props<>,\n  State\n>*/\n{\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"state\", this.generateInitialState());\n    // wrap layouts so we do not need to pass layouts to child\n    _defineProperty(this, \"onLayoutChange\", (layout /*: Layout*/) => {\n      this.props.onLayoutChange(layout, {\n        ...this.props.layouts,\n        [this.state.breakpoint]: layout\n      });\n    });\n  }\n  generateInitialState() /*: State*/{\n    const {\n      width,\n      breakpoints,\n      layouts,\n      cols\n    } = this.props;\n    const breakpoint = (0, _responsiveUtils.getBreakpointFromWidth)(breakpoints, width);\n    const colNo = (0, _responsiveUtils.getColsFromBreakpoint)(breakpoint, cols);\n    // verticalCompact compatibility, now deprecated\n    const compactType = this.props.verticalCompact === false ? null : this.props.compactType;\n    // Get the initial layout. This can tricky; we try to generate one however possible if one doesn't exist\n    // for this layout.\n    const initialLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(layouts, breakpoints, breakpoint, breakpoint, colNo, compactType);\n    return {\n      layout: initialLayout,\n      breakpoint: breakpoint,\n      cols: colNo\n    };\n  }\n  static getDerivedStateFromProps(nextProps /*: Props<*>*/, prevState /*: State*/) /*: ?$Shape<State>*/{\n    if (!(0, _fastEquals.deepEqual)(nextProps.layouts, prevState.layouts)) {\n      // Allow parent to set layouts directly.\n      const {\n        breakpoint,\n        cols\n      } = prevState;\n\n      // Since we're setting an entirely new layout object, we must generate a new responsive layout\n      // if one does not exist.\n      const newLayout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(nextProps.layouts, nextProps.breakpoints, breakpoint, breakpoint, cols, nextProps.compactType);\n      return {\n        layout: newLayout,\n        layouts: nextProps.layouts\n      };\n    }\n    return null;\n  }\n  componentDidUpdate(prevProps /*: Props<*>*/) {\n    // Allow parent to set width or breakpoint directly.\n    if (this.props.width != prevProps.width || this.props.breakpoint !== prevProps.breakpoint || !(0, _fastEquals.deepEqual)(this.props.breakpoints, prevProps.breakpoints) || !(0, _fastEquals.deepEqual)(this.props.cols, prevProps.cols)) {\n      this.onWidthChange(prevProps);\n    }\n  }\n  /**\n   * When the width changes work through breakpoints and reset state with the new width & breakpoint.\n   * Width changes are necessary to figure out the widget widths.\n   */\n  onWidthChange(prevProps /*: Props<*>*/) {\n    const {\n      breakpoints,\n      cols,\n      layouts,\n      compactType\n    } = this.props;\n    const newBreakpoint = this.props.breakpoint || (0, _responsiveUtils.getBreakpointFromWidth)(this.props.breakpoints, this.props.width);\n    const lastBreakpoint = this.state.breakpoint;\n    const newCols /*: number*/ = (0, _responsiveUtils.getColsFromBreakpoint)(newBreakpoint, cols);\n    const newLayouts = {\n      ...layouts\n    };\n\n    // Breakpoint change\n    if (lastBreakpoint !== newBreakpoint || prevProps.breakpoints !== breakpoints || prevProps.cols !== cols) {\n      // Preserve the current layout if the current breakpoint is not present in the next layouts.\n      if (!(lastBreakpoint in newLayouts)) newLayouts[lastBreakpoint] = (0, _utils.cloneLayout)(this.state.layout);\n\n      // Find or generate a new layout.\n      let layout = (0, _responsiveUtils.findOrGenerateResponsiveLayout)(newLayouts, breakpoints, newBreakpoint, lastBreakpoint, newCols, compactType);\n\n      // This adds missing items.\n      layout = (0, _utils.synchronizeLayoutWithChildren)(layout, this.props.children, newCols, compactType, this.props.allowOverlap);\n\n      // Store the new layout.\n      newLayouts[newBreakpoint] = layout;\n\n      // callbacks\n      this.props.onBreakpointChange(newBreakpoint, newCols);\n      this.props.onLayoutChange(layout, newLayouts);\n      this.setState({\n        breakpoint: newBreakpoint,\n        layout: layout,\n        cols: newCols\n      });\n    }\n    const margin = getIndentationValue(this.props.margin, newBreakpoint);\n    const containerPadding = getIndentationValue(this.props.containerPadding, newBreakpoint);\n\n    //call onWidthChange on every change of width, not only on breakpoint changes\n    this.props.onWidthChange(this.props.width, margin, newCols, containerPadding);\n  }\n  render() /*: React.Element<typeof ReactGridLayout>*/{\n    /* eslint-disable no-unused-vars */\n    const {\n      breakpoint,\n      breakpoints,\n      cols,\n      layouts,\n      margin,\n      containerPadding,\n      onBreakpointChange,\n      onLayoutChange,\n      onWidthChange,\n      ...other\n    } = this.props;\n    /* eslint-enable no-unused-vars */\n\n    return /*#__PURE__*/React.createElement(_ReactGridLayout.default, _extends({}, other, {\n      // $FlowIgnore should allow nullable here due to DefaultProps\n      margin: getIndentationValue(margin, this.state.breakpoint),\n      containerPadding: getIndentationValue(containerPadding, this.state.breakpoint),\n      onLayoutChange: this.onLayoutChange,\n      layout: this.state.layout,\n      cols: this.state.cols\n    }));\n  }\n}\nexports.default = ResponsiveReactGridLayout;\n// This should only include propTypes needed in this code; RGL itself\n// will do validation of the rest props passed to it.\n_defineProperty(ResponsiveReactGridLayout, \"propTypes\", {\n  //\n  // Basic props\n  //\n\n  // Optional, but if you are managing width yourself you may want to set the breakpoint\n  // yourself as well.\n  breakpoint: _propTypes.default.string,\n  // {name: pxVal}, e.g. {lg: 1200, md: 996, sm: 768, xs: 480}\n  breakpoints: _propTypes.default.object,\n  allowOverlap: _propTypes.default.bool,\n  // # of cols. This is a breakpoint -> cols map\n  cols: _propTypes.default.object,\n  // # of margin. This is a breakpoint -> margin map\n  // e.g. { lg: [5, 5], md: [10, 10], sm: [15, 15] }\n  // Margin between items [x, y] in px\n  // e.g. [10, 10]\n  margin: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n  // # of containerPadding. This is a breakpoint -> containerPadding map\n  // e.g. { lg: [5, 5], md: [10, 10], sm: [15, 15] }\n  // Padding inside the container [x, y] in px\n  // e.g. [10, 10]\n  containerPadding: _propTypes.default.oneOfType([_propTypes.default.array, _propTypes.default.object]),\n  // layouts is an object mapping breakpoints to layouts.\n  // e.g. {lg: Layout, md: Layout, ...}\n  layouts(props /*: Props<>*/, propName /*: string*/) {\n    if (type(props[propName]) !== \"[object Object]\") {\n      throw new Error(\"Layout property must be an object. Received: \" + type(props[propName]));\n    }\n    Object.keys(props[propName]).forEach(key => {\n      if (!(key in props.breakpoints)) {\n        throw new Error(\"Each key in layouts must align with a key in breakpoints.\");\n      }\n      (0, _utils.validateLayout)(props.layouts[key], \"layouts.\" + key);\n    });\n  },\n  // The width of this component.\n  // Required in this propTypes stanza because generateInitialState() will fail without it.\n  width: _propTypes.default.number.isRequired,\n  //\n  // Callbacks\n  //\n\n  // Calls back with breakpoint and new # cols\n  onBreakpointChange: _propTypes.default.func,\n  // Callback so you can save the layout.\n  // Calls back with (currentLayout, allLayouts). allLayouts are keyed by breakpoint.\n  onLayoutChange: _propTypes.default.func,\n  // Calls back with (containerWidth, margin, cols, containerPadding)\n  onWidthChange: _propTypes.default.func\n});\n_defineProperty(ResponsiveReactGridLayout, \"defaultProps\", {\n  breakpoints: {\n    lg: 1200,\n    md: 996,\n    sm: 768,\n    xs: 480,\n    xxs: 0\n  },\n  cols: {\n    lg: 12,\n    md: 10,\n    sm: 6,\n    xs: 4,\n    xxs: 2\n  },\n  containerPadding: {\n    lg: null,\n    md: null,\n    sm: null,\n    xs: null,\n    xxs: null\n  },\n  layouts: {},\n  margin: [10, 10],\n  allowOverlap: false,\n  onBreakpointChange: _utils.noop,\n  onLayoutChange: _utils.noop,\n  onWidthChange: _utils.noop\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}