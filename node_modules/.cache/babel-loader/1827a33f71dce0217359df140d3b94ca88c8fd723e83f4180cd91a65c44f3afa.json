{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  modalOpen: false,\n  widgets: [],\n  layouts: [],\n  board: [],\n  layout_changed: false,\n  theme: \"light\",\n  activeDashboard: \"home\",\n  dashboards: []\n};\nconst globalSlice = createSlice({\n  name: \"global\",\n  initialState,\n  reducers: {\n    toggleModalOpen: (state, action) => {\n      state.modalOpen = action.payload;\n      localStorage.setItem(\"modalOpen\", JSON.stringify(action.payload));\n    },\n    setWidgets: (state, action) => {\n      state.widgets = action.payload;\n      localStorage.setItem(\"widgets\", JSON.stringify(action.payload));\n    },\n    setLayouts: (state, action) => {\n      state.layouts = action.payload;\n      localStorage.setItem(\"layouts\", JSON.stringify(action.payload));\n    },\n    setBoard: (state, action) => {\n      state.board = action.payload;\n      localStorage.setItem(\"board\", JSON.stringify(action.payload));\n    },\n    toggleLayoutChanged: (state, action) => {\n      state.layout_changed = true;\n      localStorage.setItem(\"layout_changed\", JSON.stringify(true));\n    },\n    toggleTheme: (state, action) => {\n      state.theme = action.payload;\n      localStorage.setItem(\"theme\", action.payload);\n    },\n    setActiveDashboard: (state, action) => {\n      state.activeDashboard = action.payload;\n      localStorage.setItem(\"activeDashboard\", action.payload);\n    },\n    setDashboards: (state, action) => {\n      state.dashboards = action.payload;\n      localStorage.setItem(\"dashboards\", JSON.stringify(action.payload));\n    }\n  }\n});\nexport const {\n  toggleModalOpen,\n  setWidgets,\n  setLayouts,\n  setBoard,\n  toggleLayoutChanged,\n  toggleTheme,\n  setActiveDashboard,\n  setDashboards\n} = globalSlice.actions;\nexport default globalSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","modalOpen","widgets","layouts","board","layout_changed","theme","activeDashboard","dashboards","globalSlice","name","reducers","toggleModalOpen","state","action","payload","localStorage","setItem","JSON","stringify","setWidgets","setLayouts","setBoard","toggleLayoutChanged","toggleTheme","setActiveDashboard","setDashboards","actions","reducer"],"sources":["/Users/isaacson/Projects/invester/src/store/global.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { Layout } from \"react-grid-layout\";\nimport { Widget, WidgetInfo } from \"../components/Board/Board\";\nexport type GlobalData = {\n    modalOpen: boolean;\n    widgets: Widget[];\n    layouts: Layout[];\n    board: WidgetInfo[];\n    layout_changed: boolean;\n    theme: \"dark\" | \"light\";\n    activeDashboard: string;\n    dashboards: Dashboard[];\n};\n\nconst initialState: GlobalData = {\n    modalOpen: false,\n    widgets: [],\n    layouts: [],\n    board: [],\n    layout_changed: false,\n    theme: \"light\",\n    activeDashboard: \"home\",\n    dashboards: [],\n};\n\nconst globalSlice = createSlice({\n    name: \"global\",\n    initialState,\n    reducers: {\n        toggleModalOpen: (state, action) => {\n            state.modalOpen = action.payload;\n            localStorage.setItem(\"modalOpen\", JSON.stringify(action.payload));\n        },\n        setWidgets: (state, action) => {\n            state.widgets = action.payload;\n            localStorage.setItem(\"widgets\", JSON.stringify(action.payload));\n        },\n        setLayouts: (state, action) => {\n            state.layouts = action.payload;\n            localStorage.setItem(\"layouts\", JSON.stringify(action.payload));\n        },\n        setBoard: (state, action) => {\n            state.board = action.payload;\n            localStorage.setItem(\"board\", JSON.stringify(action.payload));\n        },\n        toggleLayoutChanged: (state, action) => {\n            state.layout_changed = true;\n            localStorage.setItem(\"layout_changed\", JSON.stringify(true));\n        },\n        toggleTheme: (state, action) => {\n            state.theme = action.payload;\n            localStorage.setItem(\"theme\", action.payload);\n        },\n        setActiveDashboard: (state, action) => {\n            state.activeDashboard = action.payload;\n            localStorage.setItem(\"activeDashboard\", action.payload);\n        },\n        setDashboards: (state, action) => {\n            state.dashboards = action.payload;\n            localStorage.setItem(\"dashboards\", JSON.stringify(action.payload));\n        },\n    },\n});\n\nexport const {\n    toggleModalOpen,\n    setWidgets,\n    setLayouts,\n    setBoard,\n    toggleLayoutChanged,\n    toggleTheme,\n    setActiveDashboard,\n    setDashboards,\n} = globalSlice.actions;\nexport default globalSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAc9C,MAAMC,YAAwB,GAAG;EAC7BC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,EAAE;EACXC,KAAK,EAAE,EAAE;EACTC,cAAc,EAAE,KAAK;EACrBC,KAAK,EAAE,OAAO;EACdC,eAAe,EAAE,MAAM;EACvBC,UAAU,EAAE;AAChB,CAAC;AAED,MAAMC,WAAW,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,QAAQ;EACdV,YAAY;EACZW,QAAQ,EAAE;IACNC,eAAe,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACZ,SAAS,GAAGa,MAAM,CAACC,OAAO;MAChCC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAACC,OAAO,CAAC,CAAC;IACrE,CAAC;IACDK,UAAU,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACX,OAAO,GAAGY,MAAM,CAACC,OAAO;MAC9BC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAACC,OAAO,CAAC,CAAC;IACnE,CAAC;IACDM,UAAU,EAAEA,CAACR,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACV,OAAO,GAAGW,MAAM,CAACC,OAAO;MAC9BC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAACC,OAAO,CAAC,CAAC;IACnE,CAAC;IACDO,QAAQ,EAAEA,CAACT,KAAK,EAAEC,MAAM,KAAK;MACzBD,KAAK,CAACT,KAAK,GAAGU,MAAM,CAACC,OAAO;MAC5BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAACC,OAAO,CAAC,CAAC;IACjE,CAAC;IACDQ,mBAAmB,EAAEA,CAACV,KAAK,EAAEC,MAAM,KAAK;MACpCD,KAAK,CAACR,cAAc,GAAG,IAAI;MAC3BW,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC;IACDK,WAAW,EAAEA,CAACX,KAAK,EAAEC,MAAM,KAAK;MAC5BD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;MAC5BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,MAAM,CAACC,OAAO,CAAC;IACjD,CAAC;IACDU,kBAAkB,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MACnCD,KAAK,CAACN,eAAe,GAAGO,MAAM,CAACC,OAAO;MACtCC,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAEH,MAAM,CAACC,OAAO,CAAC;IAC3D,CAAC;IACDW,aAAa,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC9BD,KAAK,CAACL,UAAU,GAAGM,MAAM,CAACC,OAAO;MACjCC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAACC,OAAO,CAAC,CAAC;IACtE;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EACTH,eAAe;EACfQ,UAAU;EACVC,UAAU;EACVC,QAAQ;EACRC,mBAAmB;EACnBC,WAAW;EACXC,kBAAkB;EAClBC;AACJ,CAAC,GAAGjB,WAAW,CAACkB,OAAO;AACvB,eAAelB,WAAW,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}