{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setDashboards } from \"../store/global\";\nimport { setActiveDashboard } from \"../store/global\";\nimport { v4 as uuidv4 } from \"uuid\";\nexport const useDashboard = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    dashboards\n  } = useSelector(state => state);\n  const saveDashboards = dashboardsArr => {\n    try {\n      localStorage.setItem(\"dashboards\", JSON.stringify(dashboardsArr));\n      return true;\n    } catch (err) {\n      throw new Error(err.message);\n    }\n  };\n  const createNewDashboard = async () => {\n    const newId = uuidv4();\n    const existingDashboards = await getLocalDashboards();\n    if (existingDashboards.length > 0) {\n      existingDashboards.push({\n        id: newId,\n        widgets: [],\n        layouts: []\n      });\n      localStorage.setItem(\"dashboards\", JSON.stringify(existingDashboards));\n      dispatch(setDashboards(existingDashboards));\n      dispatch(setActiveDashboard(newId));\n    } else {\n      let dashboardsTemp = [{\n        id: newId,\n        widgets: [],\n        layouts: []\n      }];\n      dispatch(setDashboards(dashboardsTemp));\n      dispatch(setActiveDashboard(newId));\n    }\n  };\n  const getLocalDashboards = async () => {\n    const dashboards = localStorage.getItem(\"dashboards\");\n    if (dashboards) {\n      const existingDashboards = JSON.parse(dashboards);\n      return existingDashboards;\n    } else {\n      return [];\n    }\n  };\n  const getLocalActiveDashboard = async () => {\n    const localActiveDashboardId = localStorage.getItem(\"activeDashboard\");\n    if (localActiveDashboardId) {\n      return localActiveDashboardId;\n    }\n    return \"home\";\n  };\n  return {\n    createNewDashboard,\n    saveDashboards,\n    getLocalDashboards,\n    getLocalActiveDashboard\n  };\n};\n_s(useDashboard, \"zDiuht2ikxpg3L2wSIdvMom6cCg=\", false, function () {\n  return [useDispatch, useSelector];\n});","map":{"version":3,"names":["useDispatch","useSelector","setDashboards","setActiveDashboard","v4","uuidv4","useDashboard","_s","dispatch","dashboards","state","saveDashboards","dashboardsArr","localStorage","setItem","JSON","stringify","err","Error","message","createNewDashboard","newId","existingDashboards","getLocalDashboards","length","push","id","widgets","layouts","dashboardsTemp","getItem","parse","getLocalActiveDashboard","localActiveDashboardId"],"sources":["/Users/isaacson/Projects/invester/src/hooks/useDashboard.ts"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport { GlobalData, setDashboards } from \"../store/global\";\nimport { setActiveDashboard } from \"../store/global\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useEffect } from \"react\";\n\nexport const useDashboard = () => {\n    const dispatch = useDispatch();\n    const { dashboards } = useSelector((state: GlobalData) => state);\n\n    const saveDashboards = (dashboardsArr: Dashboard[]) => {\n        try {\n            localStorage.setItem(\"dashboards\", JSON.stringify(dashboardsArr));\n            return true;\n        } catch (err: any) {\n            throw new Error(err.message);\n        }\n    };\n\n    const createNewDashboard = async () => {\n        const newId = uuidv4();\n\n        const existingDashboards = await getLocalDashboards();\n        if (existingDashboards.length > 0) {\n            existingDashboards.push({ id: newId, widgets: [], layouts: [] });\n            localStorage.setItem(\n                \"dashboards\",\n                JSON.stringify(existingDashboards)\n            );\n            dispatch(setDashboards(existingDashboards));\n            dispatch(setActiveDashboard(newId));\n        } else {\n            let dashboardsTemp = [{ id: newId, widgets: [], layouts: [] }];\n            dispatch(setDashboards(dashboardsTemp));\n            dispatch(setActiveDashboard(newId));\n        }\n    };\n\n    const getLocalDashboards = async (): Promise<Dashboard[]> => {\n        const dashboards = localStorage.getItem(\"dashboards\");\n        if (dashboards) {\n            const existingDashboards = JSON.parse(dashboards);\n            return existingDashboards;\n        } else {\n            return [];\n        }\n    };\n\n    const getLocalActiveDashboard = async (): Promise<string> => {\n        const localActiveDashboardId = localStorage.getItem(\"activeDashboard\");\n        if (localActiveDashboardId) {\n            return localActiveDashboardId;\n        }\n        return \"home\";\n    };\n\n    return {\n        createNewDashboard,\n        saveDashboards,\n        getLocalDashboards,\n        getLocalActiveDashboard,\n    };\n};\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAAqBC,aAAa,QAAQ,iBAAiB;AAC3D,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAGnC,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAES;EAAW,CAAC,GAAGR,WAAW,CAAES,KAAiB,IAAKA,KAAK,CAAC;EAEhE,MAAMC,cAAc,GAAIC,aAA0B,IAAK;IACnD,IAAI;MACAC,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,IAAI,CAACC,SAAS,CAACJ,aAAa,CAAC,CAAC;MACjE,OAAO,IAAI;IACf,CAAC,CAAC,OAAOK,GAAQ,EAAE;MACf,MAAM,IAAIC,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;IAChC;EACJ,CAAC;EAED,MAAMC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACnC,MAAMC,KAAK,GAAGhB,MAAM,CAAC,CAAC;IAEtB,MAAMiB,kBAAkB,GAAG,MAAMC,kBAAkB,CAAC,CAAC;IACrD,IAAID,kBAAkB,CAACE,MAAM,GAAG,CAAC,EAAE;MAC/BF,kBAAkB,CAACG,IAAI,CAAC;QAAEC,EAAE,EAAEL,KAAK;QAAEM,OAAO,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;MAChEf,YAAY,CAACC,OAAO,CAChB,YAAY,EACZC,IAAI,CAACC,SAAS,CAACM,kBAAkB,CACrC,CAAC;MACDd,QAAQ,CAACN,aAAa,CAACoB,kBAAkB,CAAC,CAAC;MAC3Cd,QAAQ,CAACL,kBAAkB,CAACkB,KAAK,CAAC,CAAC;IACvC,CAAC,MAAM;MACH,IAAIQ,cAAc,GAAG,CAAC;QAAEH,EAAE,EAAEL,KAAK;QAAEM,OAAO,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;MAC9DpB,QAAQ,CAACN,aAAa,CAAC2B,cAAc,CAAC,CAAC;MACvCrB,QAAQ,CAACL,kBAAkB,CAACkB,KAAK,CAAC,CAAC;IACvC;EACJ,CAAC;EAED,MAAME,kBAAkB,GAAG,MAAAA,CAAA,KAAkC;IACzD,MAAMd,UAAU,GAAGI,YAAY,CAACiB,OAAO,CAAC,YAAY,CAAC;IACrD,IAAIrB,UAAU,EAAE;MACZ,MAAMa,kBAAkB,GAAGP,IAAI,CAACgB,KAAK,CAACtB,UAAU,CAAC;MACjD,OAAOa,kBAAkB;IAC7B,CAAC,MAAM;MACH,OAAO,EAAE;IACb;EACJ,CAAC;EAED,MAAMU,uBAAuB,GAAG,MAAAA,CAAA,KAA6B;IACzD,MAAMC,sBAAsB,GAAGpB,YAAY,CAACiB,OAAO,CAAC,iBAAiB,CAAC;IACtE,IAAIG,sBAAsB,EAAE;MACxB,OAAOA,sBAAsB;IACjC;IACA,OAAO,MAAM;EACjB,CAAC;EAED,OAAO;IACHb,kBAAkB;IAClBT,cAAc;IACdY,kBAAkB;IAClBS;EACJ,CAAC;AACL,CAAC;AAACzB,EAAA,CAxDWD,YAAY;EAAA,QACJN,WAAW,EACLC,WAAW;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}