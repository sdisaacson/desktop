{"ast":null,"code":"var _jsxFileName = \"/Users/isaacson/Projects/invester/src/components/Board/Board.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport GridLayout from \"react-grid-layout\";\nimport \"../../styling/Widgets.css\";\nimport \"react-grid-layout/css/styles.css\";\nimport \"react-resizable/css/styles.css\";\nimport DynamicWidget from \"./components/DynamicWidget\";\nimport { useSelector } from \"react-redux\";\nimport { useBoard } from \"../../hooks/useBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  _s();\n  const {\n    save,\n    getBoard\n  } = useBoard();\n  const global = useSelector(state => state);\n  useEffect(() => {\n    getBoard();\n    // eslint-disable-next-line\n  }, []);\n  if (!global.board) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"Board\",\n    \"data-testid\": \"Board\",\n    children: global.board.length > 0 && /*#__PURE__*/_jsxDEV(GridLayout, {\n      resizeHandles: [\"s\", \"se\", \"e\"],\n      autoSize: true,\n      draggableHandle: \".header\",\n      isBounded: false,\n      useCSSTransforms: true,\n      preventCollision: false,\n      verticalCompact: true,\n      className: \"layout\",\n      containerPadding: [10, 10],\n      layout: global.board,\n      cols: 24,\n      rowHeight: 35,\n      width: window.innerWidth - 40,\n      onDragStop: async layout => {\n        if (global.activeDashboard === \"home\") {\n          save({\n            layout,\n            widgets: global.widgets\n          });\n        } else {\n          const thisDashboard = global.dashboards.find(dashB => dashB.id === global.activeDashboard);\n          save({\n            layout,\n            widgets: thisDashboard.widgets\n          });\n        }\n      },\n      onResizeStop: async layout => {\n        if (global.activeDashboard === \"home\") {\n          save({\n            layout,\n            widgets: global.widgets\n          });\n        } else {\n          const thisDashboard = global.dashboards.find(dashB => dashB.id === global.activeDashboard);\n          save({\n            layout,\n            widgets: thisDashboard.widgets\n          });\n        }\n      },\n      children: global.board.map(widget => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"Widget\",\n          children: /*#__PURE__*/_jsxDEV(DynamicWidget, {\n            widget: widget\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }, this)\n        }, widget.i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(Board, \"J/kAsazUjR40hL/PIWuSOFe7srk=\", false, function () {\n  return [useBoard, useSelector];\n});\n_c = Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["useEffect","GridLayout","DynamicWidget","useSelector","useBoard","jsxDEV","_jsxDEV","Board","_s","save","getBoard","global","state","board","id","children","length","resizeHandles","autoSize","draggableHandle","isBounded","useCSSTransforms","preventCollision","verticalCompact","className","containerPadding","layout","cols","rowHeight","width","window","innerWidth","onDragStop","activeDashboard","widgets","thisDashboard","dashboards","find","dashB","onResizeStop","map","widget","fileName","_jsxFileName","lineNumber","columnNumber","i","_c","$RefreshReg$"],"sources":["/Users/isaacson/Projects/invester/src/components/Board/Board.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport GridLayout, { Layout } from \"react-grid-layout\";\nimport \"../../styling/Widgets.css\";\nimport \"react-grid-layout/css/styles.css\";\nimport \"react-resizable/css/styles.css\";\nimport DynamicWidget from \"./components/DynamicWidget\";\nimport { useSelector } from \"react-redux\";\nimport { useBoard } from \"../../hooks/useBoard\";\nimport { GlobalData } from \"../../store/global\";\n\nexport type Widget = {\n    i: string;\n    type: string;\n    symbol?: string;\n    title?: string;\n    content?: string;\n    bookmarks?: Bookmark[];\n};\nexport type WidgetInfo = Widget & Layout;\n\nexport default function Board() {\n    const { save, getBoard } = useBoard();\n    const global = useSelector((state: GlobalData) => state);\n\n    useEffect(() => {\n        getBoard();\n        // eslint-disable-next-line\n    }, []);\n\n    if (!global.board) return null;\n\n    return (\n        <div id=\"Board\" data-testid=\"Board\">\n            {global.board.length > 0 && (\n                <GridLayout\n                    resizeHandles={[\"s\", \"se\", \"e\"]}\n                    autoSize={true}\n                    draggableHandle={\".header\"}\n                    isBounded={false}\n                    useCSSTransforms={true}\n                    preventCollision={false}\n                    verticalCompact={true}\n                    className=\"layout\"\n                    containerPadding={[10, 10]}\n                    layout={global.board}\n                    cols={24}\n                    rowHeight={35}\n                    width={window.innerWidth - 40}\n                    onDragStop={async (layout) => {\n                        if (global.activeDashboard === \"home\") {\n                            save({ layout, widgets: global.widgets });\n                        } else {\n                            const thisDashboard: Dashboard =\n                                global.dashboards.find(\n                                    (dashB) =>\n                                        dashB.id === global.activeDashboard\n                                ) as Dashboard;\n                            save({ layout, widgets: thisDashboard.widgets });\n                        }\n                    }}\n                    onResizeStop={async (layout) => {\n                        if (global.activeDashboard === \"home\") {\n                            save({ layout, widgets: global.widgets });\n                        } else {\n                            const thisDashboard: Dashboard =\n                                global.dashboards.find(\n                                    (dashB) =>\n                                        dashB.id === global.activeDashboard\n                                ) as Dashboard;\n                            save({ layout, widgets: thisDashboard.widgets });\n                        }\n                    }}\n                >\n                    {global.board.map((widget: WidgetInfo) => {\n                        return (\n                            <div key={widget.i} data-testid=\"Widget\">\n                                <DynamicWidget widget={widget} />\n                            </div>\n                        );\n                    })}\n                </GridLayout>\n            )}\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}